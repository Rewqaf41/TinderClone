import { type ProfileAction } from '../model/action.data'

interface ActionButtonProps extends ProfileAction {
	onClick?: () => void
}

const icons = {
	settings: (
		<svg width='20' height='20' viewBox='0 0 20 20' fill='none' xmlns='http://www.w3.org/2000/svg'>
			<path
				d='M9.99999 12.9167C9.22644 12.9167 8.48457 12.6094 7.93759 12.0624C7.39061 11.5154 7.08332 10.7736 7.08332 10C7.08332 9.22646 7.39061 8.48459 7.93759 7.93761C8.48457 7.39063 9.22644 7.08334 9.99999 7.08334C10.7735 7.08334 11.5154 7.39063 12.0624 7.93761C12.6094 8.48459 12.9167 9.22646 12.9167 10C12.9167 10.7736 12.6094 11.5154 12.0624 12.0624C11.5154 12.6094 10.7735 12.9167 9.99999 12.9167ZM16.1917 10.8083C16.225 10.5417 16.25 10.275 16.25 10C16.25 9.72501 16.225 9.45001 16.1917 9.16667L17.95 7.80834C18.1083 7.68334 18.15 7.45834 18.05 7.275L16.3833 4.39167C16.2833 4.20834 16.0583 4.13334 15.875 4.20834L13.8 5.04167C13.3667 4.71667 12.9167 4.43334 12.3917 4.22501L12.0833 2.01667C12.05 1.81667 11.875 1.66667 11.6667 1.66667H8.33332C8.12499 1.66667 7.94999 1.81667 7.91665 2.01667L7.60832 4.22501C7.08332 4.43334 6.63332 4.71667 6.19999 5.04167L4.12499 4.20834C3.94165 4.13334 3.71666 4.20834 3.61666 4.39167L1.94999 7.275C1.84165 7.45834 1.89165 7.68334 2.04999 7.80834L3.80832 9.16667C3.77499 9.45001 3.74999 9.72501 3.74999 10C3.74999 10.275 3.77499 10.5417 3.80832 10.8083L2.04999 12.1917C1.89165 12.3167 1.84165 12.5417 1.94999 12.725L3.61666 15.6083C3.71666 15.7917 3.94165 15.8583 4.12499 15.7917L6.19999 14.95C6.63332 15.2833 7.08332 15.5667 7.60832 15.775L7.91665 17.9833C7.94999 18.1833 8.12499 18.3333 8.33332 18.3333H11.6667C11.875 18.3333 12.05 18.1833 12.0833 17.9833L12.3917 15.775C12.9167 15.5583 13.3667 15.2833 13.8 14.95L15.875 15.7917C16.0583 15.8583 16.2833 15.7917 16.3833 15.6083L18.05 12.725C18.15 12.5417 18.1083 12.3167 17.95 12.1917L16.1917 10.8083Z'
				fill='#7C8591'
			/>
		</svg>
	),
	edit: (
		<svg width='20' height='20' viewBox='0 0 20 20' fill='none' xmlns='http://www.w3.org/2000/svg'>
			<path
				d='M15.079 0C14.669 0 14.269 0.158 13.954 0.463L11.724 2.692L17.298 8.275L19.527 6.067C20.157 5.426 20.157 4.427 19.527 3.817L16.193 0.463C15.8963 0.169914 15.4961 0.00385578 15.079 0ZM10.979 3.438L2.46 11.966L5.151 12.261L5.341 14.669L7.738 14.848L8.043 17.539L16.561 9.012M1.84 12.944L0 19.98L7.045 18.098L6.793 15.826L4.363 15.648L4.175 13.208'
				fill='#505965'
			/>
		</svg>
	),
	camera: (
		<svg width='20' height='20' viewBox='0 0 20 20' fill='none' xmlns='http://www.w3.org/2000/svg'>
			<path
				d='M3.33329 3.33334H5.83329L7.49996 1.66667H12.5L14.1666 3.33334H16.6666C17.1087 3.33334 17.5326 3.50893 17.8451 3.82149C18.1577 4.13405 18.3333 4.55798 18.3333 5.00001V15C18.3333 15.442 18.1577 15.866 17.8451 16.1785C17.5326 16.4911 17.1087 16.6667 16.6666 16.6667H3.33329C2.89127 16.6667 2.46734 16.4911 2.15478 16.1785C1.84222 15.866 1.66663 15.442 1.66663 15V5.00001C1.66663 4.55798 1.84222 4.13405 2.15478 3.82149C2.46734 3.50893 2.89127 3.33334 3.33329 3.33334ZM9.99996 5.83334C8.89489 5.83334 7.83508 6.27233 7.05368 7.05373C6.27228 7.83513 5.83329 8.89494 5.83329 10C5.83329 11.1051 6.27228 12.1649 7.05368 12.9463C7.83508 13.7277 8.89489 14.1667 9.99996 14.1667C11.105 14.1667 12.1648 13.7277 12.9462 12.9463C13.7276 12.1649 14.1666 11.1051 14.1666 10C14.1666 8.89494 13.7276 7.83513 12.9462 7.05373C12.1648 6.27233 11.105 5.83334 9.99996 5.83334ZM9.99996 7.5C10.663 7.5 11.2989 7.7634 11.7677 8.23224C12.2366 8.70108 12.5 9.33696 12.5 10C12.5 10.663 12.2366 11.2989 11.7677 11.7678C11.2989 12.2366 10.663 12.5 9.99996 12.5C9.33692 12.5 8.70103 12.2366 8.23219 11.7678C7.76335 11.2989 7.49996 10.663 7.49996 10C7.49996 9.33696 7.76335 8.70108 8.23219 8.23224C8.70103 7.7634 9.33692 7.5 9.99996 7.5Z'
				fill='white'
			/>
		</svg>
	)
}

export const ActionButton = ({ label, icon, variant, onClick }: ActionButtonProps) => {
	const isPrimary = variant === 'primary'
	const isEdit = icon === 'edit'

	return (
		<button
			onClick={onClick}
			className={`group flex flex-col items-center gap-5 transition-transform active:scale-95 ${isEdit ? 'mt-5' : ''}`}
		>
			<div
				className={`relative flex items-center justify-center rounded-full transition-all duration-200 ${
					isEdit ? 'h-14 w-14' : 'h-12 w-12'
				} ${
					isPrimary
						? 'from-primary to-secondary shadow-primary/30 bg-linear-to-br shadow-lg'
						: 'group-hover:border-primary/30 border-2 border-[#2A2F38] bg-transparent'
				} `}
			>
				<div className={isPrimary ? 'text-white' : 'group-hover:text-primary text-gray-400'}>{icons[icon]}</div>

				{isPrimary && (
					<div className='text-primary absolute right-0 bottom-0 flex h-4 w-4 items-center justify-center rounded-full bg-white shadow-md'>
						+
					</div>
				)}

				{isEdit && <div className='bg-primary absolute top-0 right-0 h-3 w-3 rounded-full border-2 border-[#21262E]' />}
			</div>

			<span
				className={`text-sm font-medium transition-colors ${
					isPrimary ? 'text-white' : 'text-gray-400 group-hover:text-white'
				}`}
			>
				{label}
			</span>
		</button>
	)
}
